1.
안녕하세요 JXES , Json Support for the XES Event Log Standard 논문 발표를 맡게된 빅데이터 응용학과 유성재입니다.

2.
논문 목차는 개요 및 서론,본론,구현,평가,결론으로 구성되어있습니다.

3,
개요에서는 XES와 JXES 정의와 개념에 대해 설명되어 있습니다.
첫째, XES는 프로세스 마이닝 도구에서 지원하는 이벤트 로그들을 위한 XML 기반 IEEE 승인 표준 형식입니다. 여기서 말하는 XML은 마크업 언어이고 쉽게 설명하자면 구글에서 내 블로그 및 사이트가 검색되려면 Sitemap.xml이 필요합니다. xml이 있어야지만 Google Search Console 크롤러가 내블로그 및 사이트를 구글에서 검색가능하도록 해줍니다.
XES를 다시 설명하자면 , 이벤트 로그와 스트림 구조를 가지면서 태그 기반 언어의 문법을 정의합니다. 프로세스 도출, 적합성 및 성능,향상 알고리즘들의 대규모 집합을 포함하는 ProM 프로세스 마이닝 툴에서도 사용 가능합니다.

본 논문에서는 이벤트 로그에 대한 JSON 표준인 JXES를 중심으로 설명되어 있습니다.

서론에서는 프로세스 마이닝의 기본 개념과 이벤트 로그에 대해 간략히 설명되어 있습니다.

프로세스 마이닝은 비즈니스 프로세스에 대한 정보를 추출하기 위해 정보 시스템으로부터 얻은 이벤트 로그들을 사용하는 것이 목적입니다.

이벤트 로그의 시스템 그룹은 로깅 시스템을 위한 고유한 로깅 메커니즘을 개발했습니다.
이벤트 로그는 케이스들의 모음으로 볼 수 있고 케이스는 이벤트들의 trace/시퀀스로 볼 수 있습니다.

이벤트 데이터는 데이터베이스 시스템, CSV, 스프레드시트, JSON 파일, 트랜잭션 로그, 메시지 로그는 물론 웹사이트나 소셜미디어으로 부터 데이터를 제공하는 API에서도 얻을 수 있습니다.


본론 으로 들어가기전 본론 Section에 대해 간략히 말씀드리겠습니다.
섹션 2에서는 이벤트 로그에 대한 JSON 파일 표준을 정의합니다.
섹션 3에서는 파서 구현에 대해 설명합니다.
섹션 4에서는 평가 기준에 대해 논의합니다.
섹션 5에서는 플러그인에 접속하는 방법과 입증 정보를 제공하고 마지막 섹션에서 이 논문을 마무리합니다.

___________________


XES 구조는 크게 5개 태그로 구성되어 있습니다.
첫 번째 ,로그태그는 이벤트 로그가 시작됨을 알리는 태그이고 이 태그가 모든 이벤트 로그 전체를 감쌉니다.
두 번째, extension 태그는 XES 파일에서 자주 쓰이는 속성들을 정의한 extension을 표현하는 태그입니다. extension에는 concept,time,life-cycle 등이 있습니다.
concept은 trace와 이벤트의 name attribute를 정의합니다.
time은 이벤트의 timestamp를 정의합니다.


세 번째,global 태그는 이벤트 로그 전체에서 공통적으로 사용되는 attribute들을 한 번에 정의합니다.
네 번째,trace 태그는 하나의 케이스를 감싸는 태그입니다. 하나의 trace 태그 안에는 하나의 case id에 속하는 trace의 이벤트들만이 포함됩니다.
그림에서 보여진 trace 전체를 보면,이 trace가 Register client, mail rejection의 순서로 진행되었음을 알 수 있습니다.

다섯 번째, event태그는 하나의 이벤트를 감싸는 태그입니다. 해당 이벤트의 액티비티,timestamp,resource 등이 이 태그 안에 포함됩니다.




XES 4가지 디자인 원칙에는 단순성, 유연성, 확장성, 표현성이 있습니다.
이는 JXES 표준 형식 정의와 관련하여 설계 결정을 내리고 구현방법을 평가하고 최적의 파서에 대해 제안을 하는데 도움이 되었습니다.

_____________


OpenXES는 Java 컬렉션 프레임워크에서 제공하는 클래스를 사용하여 메인 메모리에 이벤트 로그를 저장합니다.
장점으로는 개발을 단순화시키고 일반적으로 연구 목적으로 사용되는 작은 이벤트 로그들와 잘 작동합니다.
단점으로는 복잡한 이벤트 로그르 로딩하기에는 불 충분합니다.

XESLite는 대용량 이벤트 로그들을 처리하고 메모리 문제의 단점을 극복합니다.
DB-XES는 일반적인 XES 구조와 유사한 데이터베이스 스키마입니다.

______________________________________________________________

JSON은 데이터 교환에 일반적으로 사용되는 개방형 표준 경량 파일 형식입니다.
데이터 객체들을 저장하고 전송하기 위해서 사람이 읽을 수 있는 텍스트를 사용합니다.
장점으로는 JSON 로그를 쉽게 사용 가능합니다.

____________________________________________________________


JSON 구조를 설명하겠습니다.
배열(array)은 대괄호([])로 둘러쌓아 표현합니다.
객체(object)는 중괄호({})로 둘러쌓아 표현합니다.
로그 개체에는 JSON 개체의 trace 배열에 저장되는 0개 이상의 trace 개체가 포함됩니다.
각 trace는 case 또는 하나의 특정 개체의 실행을 나타냅니다.
모든 trace에는 임의의 수의 이벤트 개체가 포함됩니다.
또한 모든 trace에는  attrs  개체에 저장된 고유한 속성이 있습니다.

____________________________________________

String 및 Date 속성은 JSON 문자열로 저장되고 JSON 숫자는 부동 소수점과 정수를 나타냅니다.
list 값은 JSON 개체의 배열로 표현됩니다.
마지막으로 Container는 JSON 객체로 저장됩니다.

_______________________________________________
중첩된 속성 컨테이너 json 구조는 이와 같고 ,
 키 값 또는 중첩 속성이 있는 모든 컨테이너는 JXES의해 자리잡고 있고 사용자에 의해 사용될 수 없습니다.

___________________________________________


전역 속성은 문서 전체에서 해당 수준의 각 요소에 대해 적절하게 사용 가능하도록 하는 속성입니다.
전역 속성 개체에는 trace 와 이벤트에 대한 두 개의 전역 속성 목록이 있습니다.
쉽게 말하자면, 이벤트의 전역 속성은 모든 trace의 모든 이벤트에 사용될 수 있어야 합니다.
trace와 event는 전역 속성의 중첩 요소로 저장됩니다.

___________________________________________

이벤트 분류기 예제는 이와 같습니다.
이벤트 분류기는 각 이벤트에 ID를 할당하여 다른 이벤트와 비교할 수 있도록 합니다.
JXES 형식은 이벤트 분류기의 개념을 도입하여 이벤트 분류를 설정 가능하고 유연하게 만듭니다.
분류기 이름은 키에 저장되고 분류기 키는 문자열 배열로 저장됩니다.


__________________________________________________

확장에는 많은 용도로 사용가능합니다. 한 가지 중요한 용도는 이벤트 로그 분석의 특정 관점이나 차원에 필수적인 속성 세트를 도입하는 것입니다. 확장 개체들은 배열에 저장됩니다. 이름, 개념, uri는 키 값 쌍으로 저장됩니다.

_________________________________________________

구현 건너뜀

__________________________________

평가에 대해 설명하겠습니다.
논문에서는 실제 사용되고 있는 이벤트 로그 2개와 가상으로 사용되고 있는 이벤트 로그 2개를 사용해 분석을 하였습니다.
이 표에서는 실제 사용되고 있는 이벤트 로그들의 몇가지 주요 특성들을 강조하였습니다.
레벨 D2 로그에는 이벤트 로그의 수명 주기, 비용, 개념, 시간 확장과 같은 모든 표준 속성 확장이 포함됩니다.

플래그 X2 로그는 비표준 XES 확장의 속성 또는 확장이 없는 속성으로 확장된 레벨 D2입니다.

________________________________________

파서 평가는 ProM에서 기존 XES Naive 와 XES 압축 구현과 함께 수행되었습니다.

평가 기준은 크게 3가지로 속도 , 메모리 사용량 , 크기입니다.

______________________________________


표2, 표3에서 지정된 시간 단위는 밀리초이고 JSON 파서의 최상의 결과는 파란색으로 강조
표시된 것을 확인 하실 수 있습니다.
Export speed 표3에서 Jsoninter이 다른 파서보다 시간이 가장 빠르다는 것을 보실 수 있습니다. 그 이유는 Dynamic Class Shadowing tri-tree 특징 때문입니다.

_______________________________________

프로세스가 사용하는 총 메모리를 반환하는 totalMemory 메소드와 Java Virtual Machine에서 사용 가능한 메모리 양을 리턴하는 freeMemory의 차이를 사용하여 XES 구현과 다른 파서들에 대한 메모리 소비를 계산하였습니다.

___________________________________

이 표는 메가바이트 메모리 단위를 사용하였습니다.

Jackson JSON 파서는 다른 파서보다 훨씬 적은 메모리를 사용되었는 것을 표에서 확인가능합니다. 그 이유는 JSON 콘텐츠를 개별 이벤트로 읽고 쓰는 파싱/제너레이션이 증가하였기 때문입니다.

또한 Simple JSON은 평균 크기 파일과 관련해서는 메모리를 약간 적게 사용했다는 것을 확인 하실 수 있습니다.

내보내기 플러그인 표 결과를 보면 JXES가 XES보다 최대 4배 빠르다는 것을 확인 가능합니다.
그 이유는 XML과 비교하여 JSON을 내보낼 때 작성되는 축소된 구문 때문입니다.

마지막으로 Jsoninter 파서는 가장 많은 메모리를 사용하였습니다.

_________________________________________






